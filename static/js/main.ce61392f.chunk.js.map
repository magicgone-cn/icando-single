{"version":3,"sources":["utils/index.js","model/Mission.js","modules/MissionEditor.js","modules/TodoList.js","App.js","modules/Storage.js","serviceWorker.js","index.js"],"names":["CHARS","split","GuidUtil","uuid","len","radix","i","r","chars","length","Math","random","join","uuidFast","Array","rnd","uuidCompact","replace","c","toString","Util","obj","includeNull","includeUndefined","undefined","Object","keys","NodeType","root","Symbol","for","normal","leaf","Mission","title","id","description","completed","children","parent","type","this","RootMission","redirectParentPointer","parentNode","forEach","node","MissionFactory","mission","assign","targetParentNode","clone","map","isEmpty","item","filter","pointer","tempParentNode","Error","update","tempNode","refreshNode","data","convertMissionToData","keyFor","JSON","stringify","json","convertDataToMission","missionData","parse","EditType","insert","delete","MissionEditor","props","handleSubmit","event","preventDefault","form","validateFields","errors","values","onChange","editType","getFieldDecorator","onSubmit","Item","label","initialValue","readOnly","rules","required","message","htmlType","block","formatButtonText","onClick","onCancel","React","Component","WrappedMissionEditor","Form","create","propTypes","TodoList","state","showCompleted","openEditor","promise","Promise","resolve","modal","Modal","info","icon","okButtonProps","style","display","content","destroy","callback","then","rootNode","rootMission","renderTreeNodes","nodes","TreeNode","key","handleMissionStatusChange","checked","target","renderMission","hidden","className","actions","handleEdit","handleDelete","handleAdd","data-mission","marginRight","Meta","marginLeft","dataSource","rowKey","renderItem","parentMission","append","handleShowCompletedChange","setState","missionList","justify","textAlign","Title","checkedChildren","unCheckedChildren","minHeight","span","onSave","onExport","onImport","WrapperComponent","TodoListWithStorage","handleChange","handleSave","jsonStr","convertToJson","localStorage","setItem","handleLoad","rootMissionStr","getItem","createFromJson","handleExport","blob","Blob","a","document","createElement","download","href","window","URL","createObjectURL","dataset","downloadurl","click","handleImportInit","input","accept","addEventListener","file","path","files","fileReader","FileReader","onload","result","readAsText","importInput","handleImport","App","Boolean","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ce61392f.chunk.js","sourcesContent":["// eslint-disable\r\n// Private array of chars to use\r\nconst CHARS = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz'.split('');\r\nexport class GuidUtil {\r\n  static uuid = function (len, radix) {\r\n    var chars = CHARS, uuid = [], i;\r\n    radix = radix || chars.length;\r\n\r\n    if (len) {\r\n      // Compact form\r\n      for (i = 0; i < len; i++) uuid[i] = chars[0 | Math.random() * radix];\r\n    } else {\r\n      // rfc4122, version 4 form\r\n      var r;\r\n\r\n      // rfc4122 requires these characters\r\n      uuid[8] = uuid[13] = uuid[18] = uuid[23] = '-';\r\n      uuid[14] = '4';\r\n\r\n      // Fill in random data.  At i==19 set the high bits of clock sequence as\r\n      // per rfc4122, sec. 4.1.5\r\n      for (i = 0; i < 36; i++) {\r\n        if (!uuid[i]) {\r\n          r = 0 | Math.random() * 16;\r\n          uuid[i] = chars[(i === 19) ? (r & 0x3) | 0x8 : r];\r\n        }\r\n      }\r\n    }\r\n\r\n    return uuid.join('');\r\n  };\r\n\r\n  // A more performant, but slightly bulkier, RFC4122v4 solution.  We boost performance\r\n  // by minimizing calls to random()\r\n  static uuidFast = function () {\r\n    var chars = CHARS, uuid = new Array(36), rnd = 0, r;\r\n    for (var i = 0; i < 36; i++) {\r\n      if (i === 8 || i === 13 || i === 18 || i === 23) {\r\n        uuid[i] = '-';\r\n      } else if (i === 14) {\r\n        uuid[i] = '4';\r\n      } else {\r\n        if (rnd <= 0x02) rnd = 0x2000000 + (Math.random() * 0x1000000) | 0;\r\n        r = rnd & 0xf;\r\n        rnd = rnd >> 4;\r\n        uuid[i] = chars[(i === 19) ? (r & 0x3) | 0x8 : r];\r\n      }\r\n    }\r\n    return uuid.join('');\r\n  };\r\n\r\n  // A more compact, but less performant, RFC4122v4 solution:\r\n  static uuidCompact = function () {\r\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\r\n      // eslint-disable-next-line\r\n      var r = Math.random() * 16 | 0, v = c === 'x' ? r : (r & 0x3 | 0x8);\r\n      return v.toString(16);\r\n    });\r\n  };\r\n\r\n}\r\n\r\n/**\r\n * 常用工具类\r\n */\r\nexport class Util {\r\n  /**\r\n   * 判断对象是否为空\r\n   * @param {object|array|string} obj 目标对象\r\n   * @param {boolean} [includeNull=true] 是否包含null\r\n   * @param {boolean} [includeUndefined=true] 是否包含undefined\r\n   * @returns {boolean} 为空时返回true\r\n   */\r\n  static isEmpty(obj, includeNull = true, includeUndefined = true) {\r\n    if (!includeNull && obj === null) {\r\n      return false;\r\n    }\r\n    if (!includeUndefined && obj === undefined) {\r\n      return false;\r\n    }\r\n    return obj === null || obj === undefined || Object.keys(obj).length === 0;\r\n  }\r\n}\r\n","import {GuidUtil, Util} from \"../utils\";\r\n\r\nexport const NodeType = {\r\n  root: Symbol.for('rootNode'),\r\n  normal: Symbol.for('normalNode'),\r\n  leaf: Symbol.for('leafNode'),\r\n};\r\n\r\n/**\r\n * 任务\r\n * @param {string} id\r\n * @param {string} title 任务名称\r\n * @param {string} description 任务详细描述\r\n * @param {bool} completed 任务是否完成\r\n * @param {array<Mission>} children 子任务\r\n */\r\nexport class Mission{\r\n  id = '';\r\n  title = '';\r\n  description = '';\r\n  completed = false;\r\n  children = null;\r\n  parent = null;\r\n  type = NodeType.normal;\r\n\r\n  constructor(title) {\r\n    this.id = GuidUtil.uuid(); // guid\r\n    this.title = title;\r\n  }\r\n}\r\n\r\nexport class RootMission extends Mission{\r\n\r\n  type = NodeType.root;\r\n\r\n  constructor() {\r\n    super('root node');\r\n    this.children = [];\r\n  }\r\n\r\n}\r\n\r\n\r\n/**\r\n * 修改子节点的父节点指针为当前父节点\r\n * @param {Mission} parentNode\r\n * @returns {Mission}\r\n */\r\nfunction redirectParentPointer(parentNode){\r\n  parentNode.children.forEach(node=>{\r\n    node.parent = parentNode;\r\n  });\r\n  return parentNode;\r\n}\r\n\r\n/**\r\n * 任务相关工厂方法\r\n */\r\nexport class MissionFactory{\r\n  /**\r\n   * 复制\r\n   * @param mission\r\n   * @returns {Mission}\r\n   */\r\n  static clone(mission){\r\n    switch(mission.type){\r\n      case NodeType.root:{\r\n        return Object.assign(new RootMission(),mission);\r\n      }\r\n      default:{\r\n        return Object.assign(new Mission(),mission);\r\n      }\r\n    }\r\n  }\r\n  /**\r\n   * 添加任务\r\n   * @param parentNode\r\n   * @param mission\r\n   * @returns\r\n   * 返回新的父节点，并将原来此父节点下的所有子节点的父节点指针修改为新的父节点\r\n   */\r\n  static append(parentNode,mission){\r\n\r\n    const targetParentNode = MissionFactory.clone(parentNode);\r\n    if(targetParentNode.children){\r\n      // 子节点已存在\r\n      targetParentNode.children = [...targetParentNode.children,mission];\r\n    }else{\r\n      // 子节点不存在\r\n      targetParentNode.children = [mission];\r\n    }\r\n    // 重写父节点指针指向新的父节点\r\n    redirectParentPointer(targetParentNode);\r\n    return targetParentNode;\r\n  }\r\n\r\n  /**\r\n   * 修改任务\r\n   * @param parentNode\r\n   * @param mission\r\n   */\r\n  static update(parentNode,mission){\r\n    // 修改目标节点为修改后的节点\r\n    const targetParentNode = MissionFactory.clone(parentNode);\r\n    targetParentNode.children = parentNode.children.map(node=>{\r\n      if(node.id === mission.id){\r\n        return mission;\r\n      }else{\r\n        return node;\r\n      }\r\n    });\r\n\r\n    // 如果子节点还有子节点，则更新子节点的父节点指针指向新生成的子节点\r\n    if(!Util.isEmpty(mission.children)){\r\n      mission.children.forEach(item=>{\r\n        item.parent = mission;\r\n      })\r\n    }\r\n\r\n    // 重写父节点指针指向新的父节点\r\n    redirectParentPointer(targetParentNode);\r\n    return targetParentNode;\r\n  }\r\n\r\n  /**\r\n   * 删除任务\r\n   * @param parentNode\r\n   * @param mission\r\n   */\r\n  static delete(parentNode,mission){\r\n    const targetParentNode = MissionFactory.clone(parentNode);\r\n    targetParentNode.children = parentNode.children.filter(node=>{\r\n      return node.id !== mission.id;\r\n    });\r\n\r\n    // 重写父节点指针指向新的父节点\r\n    redirectParentPointer(targetParentNode);\r\n    return targetParentNode;\r\n  }\r\n\r\n  /**\r\n   * 刷新目标节点\r\n   * @param {Mission} parentNode\r\n   * @param {Mission} node\r\n   */\r\n  static refreshNode(parentNode,node){\r\n    let pointer = node;\r\n    while(true){\r\n      const tempParentNode = pointer.parent;\r\n      if(tempParentNode === parentNode){\r\n        break;\r\n      }\r\n\r\n      if(tempParentNode.type === NodeType.root){\r\n        throw new Error('无效的父节点');\r\n      }\r\n\r\n      pointer = tempParentNode;\r\n    }\r\n\r\n\r\n    if(node.parent === parentNode){\r\n      return MissionFactory.update(node.parent,node);\r\n    }else{\r\n      const tempNode = MissionFactory.update(node.parent,node);\r\n      return MissionFactory.refreshNode(parentNode,tempNode);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 转为json\r\n   * @param mission\r\n   * @returns {string}\r\n   */\r\n  static convertToJson(mission) {\r\n    const data = convertMissionToData(mission);\r\n    return JSON.stringify(data);\r\n  }\r\n\r\n  /**\r\n   * 从json创建Mission\r\n   * @param json\r\n   * @returns {Mission}\r\n   */\r\n  static createFromJson(json){\r\n    const data = JSON.parse(json);\r\n    const mission = convertDataToMission(data);\r\n    return mission;\r\n  }\r\n}\r\n\r\n/**\r\n * 将Mission转为纯数据对象\r\n * @param mission\r\n * @returns {object}\r\n */\r\nfunction convertMissionToData(mission){\r\n  // 常规字段赋值\r\n  const {parent,children,type,...data} = mission;\r\n\r\n  // type赋值\r\n  data.type = Symbol.keyFor(type);\r\n\r\n  // children赋值\r\n  if(children){\r\n    data.children = children.map(item=>{\r\n      return convertMissionToData(item);\r\n    })\r\n  }else{\r\n    data.children = null;\r\n  }\r\n\r\n  return data;\r\n}\r\n\r\n/**\r\n * 将纯数据对象转为Mission\r\n * @param data\r\n * @param {Mission} [parent=null] 父节点，默认为空\r\n * @returns {Mission}\r\n */\r\nfunction convertDataToMission(data,parent=null){\r\n  // 常规赋值\r\n  const {type,children,...missionData} = data;\r\n\r\n  let mission;\r\n  switch(Symbol.for(type)){\r\n    case NodeType.root: {\r\n      mission = new RootMission();\r\n      break;\r\n    }\r\n    default:{\r\n      mission = new Mission();\r\n    }\r\n  }\r\n  Object.assign(mission,missionData);\r\n\r\n  // type赋值\r\n  mission.type = Symbol.for(type);\r\n\r\n  // children赋值\r\n  if(children){\r\n    mission.children = children.map(item=>{\r\n      return convertDataToMission(item,mission);\r\n    })\r\n  }else{\r\n    mission.children = null;\r\n  }\r\n\r\n  // parent赋值\r\n  mission.parent = parent;\r\n\r\n  return mission;\r\n}\r\n","import React from \"react\";\r\nimport * as PropTypes from \"prop-types\";\r\nimport {Mission} from \"../model/Mission\";\r\nimport {Button, Form, Input} from \"antd\";\r\n\r\nconst EditType = {\r\n  insert: Symbol.for('insert'),\r\n  update: Symbol.for('update'),\r\n  delete: Symbol.for(\"delete\"),\r\n};\r\nclass MissionEditor extends React.Component{\r\n\r\n  static propTypes = {\r\n    mission: PropTypes.instanceOf(Mission),\r\n    onChange: PropTypes.func.isRequired,\r\n    onCancel: PropTypes.func.isRequired,\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.mission = this.props.mission || new Mission('');\r\n    this.editType = this.props.mission ? EditType.update : EditType.insert\r\n  }\r\n\r\n  handleSubmit = (event) =>{\r\n    event.preventDefault();\r\n    this.props.form.validateFields((errors, values) => {\r\n      if(!errors){\r\n        const mission = {...this.mission,...values};\r\n\r\n        // 返回修改后的mission\r\n        this.props.onChange(mission);\r\n      }\r\n    })\r\n  };\r\n\r\n  render() {\r\n    const {getFieldDecorator} = this.props.form;\r\n    let {mission} = this;\r\n    return (\r\n      <Form onSubmit={this.handleSubmit}>\r\n        <Form.Item label={\"任务ID\"}>\r\n          {getFieldDecorator('id',{\r\n            initialValue: mission.id,\r\n          })(<Input readOnly/>)}\r\n        </Form.Item>\r\n        <Form.Item label=\"任务名称\">\r\n          {getFieldDecorator('title',{\r\n            initialValue: mission.title,\r\n            rules: [\r\n              {required: true,message:'请输入任务名称'}\r\n            ]\r\n          })(<Input />)}\r\n        </Form.Item>\r\n        <Form.Item label=\"任务详情\">\r\n          {getFieldDecorator('description',{\r\n            initialValue: mission.description\r\n          })(<Input />)}\r\n        </Form.Item>\r\n        <Form.Item>\r\n          <Button type=\"primary\" htmlType=\"submit\" block>{formatButtonText(this.editType)}</Button>\r\n          <Button type=\"default\" block onClick={this.props.onCancel}>取消</Button>\r\n        </Form.Item>\r\n      </Form>\r\n    )\r\n  }\r\n}\r\n\r\n/**\r\n * 格式化按钮文字\r\n * @param editType\r\n */\r\nfunction formatButtonText(editType){\r\n  switch(editType){\r\n    case EditType.update:{\r\n      return '修改';\r\n    }\r\n    case EditType.insert:{\r\n      return '新增';\r\n    }\r\n    default: {\r\n      return '保存';\r\n    }\r\n  }\r\n}\r\n\r\nconst WrappedMissionEditor = Form.create()(MissionEditor);\r\nWrappedMissionEditor.propTypes = MissionEditor.propTypes;\r\n\r\nexport default WrappedMissionEditor;\r\n","import React from 'react';\r\nimport * as PropTypes from 'prop-types';\r\nimport {Row, Col, Typography, List, Button, Modal, Tree, Checkbox, Switch} from 'antd';\r\nimport {MissionFactory, NodeType, RootMission} from \"../model/Mission\";\r\nimport MissionEditor from \"./MissionEditor\";\r\n\r\nimport './TodoList.css';\r\n\r\nexport default class TodoList extends React.Component{\r\n  static propTypes = {\r\n    rootMission: PropTypes.instanceOf(RootMission).isRequired,\r\n    onChange: PropTypes.func.isRequired, // 数据变化\r\n    onSave: PropTypes.func.isRequired, // 保存\r\n    onImport: PropTypes.func.isRequired, // 导入\r\n    onExport: PropTypes.func.isRequired, // 导出\r\n  };\r\n\r\n  state = {\r\n    showCompleted: false\r\n  };\r\n\r\n  openEditor = (mission) => {\r\n    const promise = new Promise((resolve)=>{\r\n      const modal = Modal.info({\r\n        icon: null,\r\n        okButtonProps: {style:{display: 'none'}},\r\n        content: (\r\n          <MissionEditor\r\n            mission={mission}\r\n            onChange={(mission)=>{resolve(mission);modal.destroy();}}\r\n            onCancel={()=>{modal.destroy()}}\r\n          />\r\n        )\r\n      });\r\n    });\r\n    const editor = {\r\n      onChange: (callback) => {\r\n        promise.then((mission)=>{\r\n          callback(mission);\r\n        })\r\n      }\r\n    };\r\n    return editor;\r\n  };\r\n\r\n  refreshNode = (node) => {\r\n    const rootNode = this.props.rootMission;\r\n    if(node.type === NodeType.root){\r\n      this.props.onChange(node);\r\n    }else{\r\n      this.props.onChange(MissionFactory.refreshNode(rootNode,node));\r\n    }\r\n\r\n  };\r\n\r\n  renderTreeNodes = (nodes) => {\r\n    if(nodes){\r\n      return nodes.map( mission => {\r\n        return (\r\n          <Tree.TreeNode title={mission.title} key={mission.key}>\r\n            {mission.children && this.renderTreeNodes(mission.children)}\r\n          </Tree.TreeNode>\r\n        )\r\n      });\r\n    }\r\n  };\r\n\r\n  handleMissionStatusChange = (event) => {\r\n    const checked = event.target.checked;\r\n    const mission = event.target['data-mission'];\r\n    this.refreshNode(Object.assign(MissionFactory.clone(mission),{completed:checked}));\r\n  };\r\n\r\n  /**\r\n   *\r\n   * @param {Mission} mission\r\n   * @returns {*}\r\n   */\r\n  renderMission = (mission) => {\r\n    const {showCompleted} = this.state;\r\n    // TODO button传递mission存在效率问题，待优化\r\n    return (\r\n      <>\r\n        <List.Item hidden={!showCompleted&&mission.completed} className=\"mission\" actions={[<Button className=\"btn-hidden\" onClick={()=>{this.handleEdit(mission)}}>编辑</Button>,<Button className=\"btn-hidden\" onClick={()=>{this.handleDelete(mission)}}>删除</Button>,<Button className=\"btn-hidden\" onClick={()=>{this.handleAdd(mission)}}>添加</Button>]}>\r\n          <Checkbox checked={mission.completed} onChange={this.handleMissionStatusChange} data-mission={mission} style={{marginRight: '20px'}}/>\r\n          <List.Item.Meta title={mission.title} description={mission.description} />\r\n        </List.Item>\r\n        {mission.children && Object.keys(mission.children).length > 0 && <List style={{marginLeft: '20px'}} dataSource={mission.children} rowKey={(mission)=>mission.id} renderItem={(mission)=>{\r\n          return this.renderMission(mission);\r\n        }} />}\r\n      </>\r\n    )\r\n  };\r\n\r\n  /**\r\n   * 编辑Mission\r\n   * @param mission\r\n   */\r\n  handleEdit = (mission) => {\r\n    this.openEditor(mission).onChange((mission)=>{\r\n      this.refreshNode(mission);\r\n    })\r\n  };\r\n\r\n  /**\r\n   * 删除mission\r\n   * @param mission\r\n   */\r\n  handleDelete = (mission) => {\r\n    this.refreshNode(MissionFactory.delete(mission.parent,mission));\r\n  };\r\n\r\n  /**\r\n   * 添加子mission\r\n   * @param {Mission} parentMission\r\n   */\r\n  handleAdd = (parentMission) => {\r\n    this.openEditor().onChange((mission)=>{\r\n      this.refreshNode(MissionFactory.append(parentMission,mission));\r\n    });\r\n  };\r\n\r\n  handleShowCompletedChange = (showCompleted) => {\r\n    this.setState({showCompleted});\r\n  };\r\n\r\n  render() {\r\n    const missionList = this.props.rootMission.children;\r\n    return (\r\n      <>\r\n        <Row type=\"flex\" justify=\"center\">\r\n          <Col style={{textAlign:'center'}}>\r\n            <Typography.Title>I CAN DO</Typography.Title>\r\n            <Switch checkedChildren=\"显示已完成\" unCheckedChildren=\"隐藏已完成\" checked={this.state.showCompleted} onChange={this.handleShowCompletedChange}/>\r\n          </Col>\r\n        </Row>\r\n        <Row type=\"flex\" justify=\"center\" style={{minHeight: '50vh'}}>\r\n          <Col span={18}>\r\n            <List dataSource={missionList} rowKey={(mission)=>mission.id} renderItem={(mission)=>{\r\n              return this.renderMission(mission);\r\n            }} />\r\n          </Col>\r\n          <Col span={10}>\r\n            <Button type=\"primary\" block onClick={()=>{this.handleAdd(this.props.rootMission)}}>add mission</Button>\r\n          </Col>\r\n        </Row>\r\n        <Row type=\"flex\" justify=\"center\">\r\n          <Col span={4}>\r\n            <Button type=\"default\" block onClick={this.props.onSave}>save</Button>\r\n          </Col>\r\n          <Col span={4}>\r\n            <Button type=\"default\" block onClick={this.props.onExport}>export</Button>\r\n          </Col>\r\n          <Col span={4}>\r\n            <Button type=\"default\" block onClick={this.props.onImport}>import</Button>\r\n          </Col>\r\n        </Row>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\n","import React from 'react';\r\nimport \"antd/dist/antd.css\";\r\nimport './App.css';\r\nimport TodoList from \"./modules/TodoList\";\r\nimport connectStorage from \"./modules/Storage\";\r\n\r\n// 与存储连接，后续可以改为redux\r\nconst TodoListWithStorage = connectStorage(TodoList);\r\n\r\nfunction App() {\r\n  return (\r\n    <TodoListWithStorage />\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport {MissionFactory, RootMission} from \"../model/Mission\";\r\n\r\nexport default function connectStorage(WrapperComponent){\r\n  return class Storage extends React.Component{\r\n\r\n    state = {\r\n      rootMission: new RootMission()\r\n    };\r\n\r\n    componentDidMount() {\r\n      this.handleImportInit();\r\n      this.handleLoad();\r\n    }\r\n\r\n    handleChange = (rootMission) => {\r\n      this.setState({\r\n        rootMission: rootMission\r\n      })\r\n    };\r\n\r\n    handleSave = () => {\r\n      const jsonStr = MissionFactory.convertToJson(this.state.rootMission);\r\n      localStorage.setItem(\"rootMission\",jsonStr);\r\n      return Promise.resolve(jsonStr);\r\n    };\r\n\r\n    handleLoad = () => {\r\n      const rootMissionStr = localStorage.getItem(\"rootMission\");\r\n      if(rootMissionStr){\r\n        const rootMission = MissionFactory.createFromJson(rootMissionStr);\r\n        this.setState({\r\n          rootMission\r\n        })\r\n      }\r\n    };\r\n\r\n    handleExport = () => {\r\n      // 先保存\r\n      this.handleSave().then((jsonStr)=>{\r\n        const filename = 'icando.json';\r\n        const blob = new Blob([jsonStr],{type:'text/json'});\r\n        const a = document.createElement('a');\r\n        a.download = filename;\r\n        a.href = window.URL.createObjectURL(blob);\r\n        a.dataset.downloadurl = ['text/json', a.download, a.href].join(':');\r\n        a.click();\r\n      });\r\n    };\r\n\r\n    handleImportInit = () => {\r\n      const input = document.createElement('input');\r\n      input.type = 'file';\r\n      input.accept = '.json';\r\n      input.addEventListener('change',(event)=>{\r\n        const file = event.path[0].files.item(0);\r\n        const fileReader = new FileReader();\r\n        fileReader.onload = (event)=>{\r\n          const jsonStr = event.target.result;\r\n          const rootMission = MissionFactory.createFromJson(jsonStr);\r\n          this.setState({\r\n            rootMission\r\n          });\r\n        };\r\n        fileReader.readAsText(file);\r\n      });\r\n\r\n      this.importInput = input;\r\n    };\r\n\r\n    handleImport = () => {\r\n      this.importInput.click();\r\n    };\r\n\r\n    render() {\r\n      const {rootMission} = this.state;\r\n      return <WrapperComponent\r\n        {...this.props}\r\n        rootMission={rootMission}\r\n        onChange={this.handleChange}\r\n        onSave={this.handleSave}\r\n        onExport={this.handleExport}\r\n        onImport={this.handleImport}\r\n      />\r\n    }\r\n  }\r\n}\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}